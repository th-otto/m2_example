DEFINITION MODULE VDIInquires;
#define REF


(*  Megemax Modula-2 GEM-Library :  Die VDI Nachfragefunktionen
 *
 *  Autor: Manuel Chakravarty           Erstellt :  04.11.87
 *
 *  Version   2.2     V#0015
 *)

(*      Dieses Modul dient zum Erfragen der mit den Routine von 'VDIAttributs'
 *      gesetzten Parameter. Darueber hinaus koennen noch einige andere Werte
 *      ermittelt werden.
 *      Die 'Extended Inquire'-Funktion ist nicht aufgefuehrt, da die von ihr
 *      gelieferten Parameter, unter anderem, mit 'GEMEnv.DeviceParameter'
 *      erfragt werden koennen.
 *      Ausserdem ist 'Inquire Input Mode' nicht vorhanden, da es von dem
 *      Modul 'VDIInputs' schon implizit verwendet wird.
 *)


FROM GrafBase   IMPORT Rectangle, WritingMode;

FROM GEMGlobals IMPORT LineType, MarkerType, FillType, THorJust,
                       TVertJust, LineEnding;

FROM GEMShare IMPORT DeviceHandle, logInpDev, inputMode;
FROM GEMVDIbase IMPORT VDIWorkOutType, RGBArrayType, PxyArrayType, TextAttrArrayType, BigPxyArrayType, FontNameType,
     DistanceArrayType, LineAttrArrayType, MarkerAttrArrayType, FillAttrArrayType;

PROCEDURE ExtendedInquire (handle: DeviceHandle; owflag: BOOLEAN; VAR param: ARRAY OF INTEGER16);

(*  Damit kann man die RGB-Anteile des Farbindex 'color' erfragen.
 *  Ist 'set = FALSE', so werden die gesetzten Werte zurueckgegeben,
 *  sonst liefert die Prozedur die auf dem Geraet realisierte Farb-
 *  mischung. Dabei enthaelt 'r' den Rot-, 'g' den Gruen- und 'b'
 *  den Blauanteil.
 *  Konnten die Werte, zum Beispiel weil der Index nicht existiert,
 *  nicht ermittelt werden, so ist 'GemError () = TRUE'.
 *)
PROCEDURE GetColorDef(handle: DeviceHandle; color: CARDINAL; set: BOOLEAN; VAR r, g, b: CARDINAL);
PROCEDURE InquireColour(handle: DeviceHandle; color: INTEGER; set: INTEGER; VAR rgb: RGBArrayType);

(*  Erfragt die Attribute fuer das Linienzeichnen. Es ist 'typ'
 *  der Linientyp, 'color' der verwendete Farbindex, 'mode' der
 *  Schreibmodus und 'width' die Strichstaerke.
 *)
PROCEDURE GetLineStyle(    handle: DeviceHandle;
                VAR typ   : LineType;
                VAR color : CARDINAL;
                VAR mode  : WritingMode;
                VAR begin,
                    end   : LineEnding;
                VAR width : CARDINAL);
PROCEDURE InquireLineAttributes(handle: DeviceHandle; VAR attr: LineAttrArrayType);

(*  Die Makierungsattribute werden ermittelt. Dabei ist 'typ'
 *  die Art der Makierung, 'color' die Makierungsfarbe, 'mode'
 *  der Schreibmodus und 'height' die Hoehe der Makierung.
 *)
PROCEDURE GetMarkerStyle(    handle: DeviceHandle;
                  VAR typ   : MarkerType;
                  VAR color : CARDINAL;
                  VAR mode  : WritingMode;
                  VAR height: CARDINAL);
PROCEDURE InquireMarkerAttributes(handle:DeviceHandle; VAR attr:MarkerAttrArrayType);

(*  Liefert die Modi fuer das Fuellen von Flaechen. Es ist 'typ'
 *  der Fuelltyp, 'color' die Fuellfarbe, 'index' der Index des
 *  eventuell verwendeten Musters, 'mode' der Schreibmodus und
 *  'peri' zeigt an, ob die gefuellte Flaeche umrahmt wird.
 *)
PROCEDURE GetFillStyle(    handle: DeviceHandle;
                VAR typ   : FillType;
                VAR color : CARDINAL;
                VAR index : CARDINAL;
                VAR mode  : WritingMode;
                VAR peri  : BOOLEAN);
PROCEDURE InquireFillAttributes(handle:DeviceHandle; VAR attr: LineAttrArrayType);

(*  Die von dieser Prozedur ermittelten Parameter sind bei Text-
 *  ausgaben relevant. Dabei spezifiziert:
 *
 *  'font'   -- den verwendeten Zeichensatz
 *  'color'  -- den benutzten Farbindex
 *  'angle'  -- den Winkel der Grundlinie zur Horizontalen
 *  'hor'    -- die horizontale Justierung
 *  'vert'   -- die vertikale Justierung
 *  'mode'   -- den aktuellen Schreibmodus
 *  'charW'  -- die Zeichenbreite
 *  'charH'  -- die Zeichenhoehe
 *  'boxW'   -- die Breite einer Zeichenbox
 *  'boxH'   -- die Hoehe einer Zeichenbox
 *)
PROCEDURE GetTextStyle(    handle                  : DeviceHandle;
                VAR font, color, angle      : CARDINAL;
                VAR hor                     : THorJust;
                VAR vert                    : TVertJust;
                VAR mode                    : WritingMode;
                VAR charW, charH, boxW, boxH: CARDINAL    );

(*  Diese Funktion berechnet Ausmasse des Rechtecks, das die
 *  Zeichenkette 'str', wuerde sie ausgegeben, belegt.
 *)
PROCEDURE TextExtent(handle: DeviceHandle; REF str: ARRAY OF CHAR): Rectangle;
PROCEDURE InquireTextExtent(handle: DeviceHandle; REF str: ARRAY OF CHAR; VAR extent: BigPxyArrayType);

(*  Fuer das Zeichen 'ch' wird in dieser Routine die Zeichenbreite
 *  und der Abstand des Zeichens vom linken ('dLeft') und vom
 *  rechten Rand ('dRight'),der Zeichenzelle, erfragt.
 *)
PROCEDURE GetCharSize(    handle: DeviceHandle;
                   ch    : CHAR;
               VAR width,
                   dLeft,
                   dRight: CARDINAL);
PROCEDURE InquireCharWidth(handle: DeviceHandle; ch: CHAR; VAR width: INTEGER; VAR dLeft: INTEGER; VAR dRight: INTEGER): INTEGER;

(*  Es wird der Name ('name') des Zeichensatzes mit der Kennummer
 *  'num' geliefert.
 *  Der Systemzeichensatz hat die Nummer 1, weitere, mit LoadFonts
 *  nachgeladene Fonts sind ab 2 durchnumeriert.
 *  Ausserdem wird hiermit die Zugriffskennung eines Fonts
 *  ermittelt, um ihn daraufhin mit "VDIAttributes.SetTextFace"
 *  als Fonts fuer die Textausgabe (GrafText) zu aktivieren.
 *  Leider wurde der Parameter hierfuer bei dieser Funktion
 *  vergessen. Sie koennen ihn aber leicht ermitteln, indem Sie
 *  mithilfe des Moduls "GEMBase" nach dem Aufruf von "GetFaceName"
 *  das erste Integer-Rueckgabefeld auslesen. Beispielsweise so:
 *   VAR aespb: GEMBase.AESPB; vdipb: GEMBase.VDIPB;
 *    ...
 *    GEMBase.GetPBs (gemHdl, vdipb, aespb);
 *    GetFaceName (devHdl, fontNr, fontName);
 *    fontHandle:= vdipb.iooff^[0];
 *    SetTextFace (devHdl, fontHandle);
 *  Ein ausfuehrlicheres Beispiel finden Sie im DEMO-Modul "TextDemo".
 *)
PROCEDURE GetFaceName(    handle: DeviceHandle;
                   num   : CARDINAL;
               VAR name  : ARRAY OF CHAR);
CONST InquireFaceName = GetFaceName;

PROCEDURE InquireInputMode(handle: DeviceHandle; dev: logInpDev; VAR input: inputMode);

(*  Mit dieser Prozedur kann man eine 'Cell Array'-Definition er-
 *  fragen.
 *  Es ist 'frame' der Rechteckbereich, der erfragt werden soll,
 *  'rowLength' die Laenge einer Zeile im Array und 'numRows' die
 *  Anzahl der Zeilen. 'usedElems' liefert die Anzahl der pro Zeile
 *  benutzten Elemente, 'usedRows' die Zahl der benutzten Zeilen
 *  und 'undef' besagt ob die Farbwerte ermittelt werden konnten
 *  ('undef = FALSE' bedeutet: Kein Fehler). 'colArray' enthaelt
 *  die ermittelten Farbindizies.
 *
 *  HINWEIS: Diese Routine ist in der aktuellen TOS Version nicht
 *           implementiert.
 *)
PROCEDURE GetCellArray(    handle             : DeviceHandle;
                    frame              : Rectangle;
                    rowLength, numRows : CARDINAL;
                VAR usedElems, usedRows: CARDINAL;
                VAR undef              : BOOLEAN;
                VAR colArray           : ARRAY OF CARDINAL);

(*  Erfragt einige Informationen ueber den aktuellen Zeichensatz.
 *
 *  'minADE'    -- Die Ordinalzahl des ersten darstellbaren Zeichens
 *  'maxADE'    -- Die Ordinalzahl des letzen darstellbaren Zeichens
 *
 *  Abstand von der Grundlinie (base Line) fuer,
 *
 *  'bottom'        -- die untere Grenze der Zeichenbox (bottom line)
 *  'descent'       -- die Grenze der Unterlaengen (descent line)
 *  'half'          -- die Grenze fuer Kleinbuchstaben (half line)
 *  'ascent'        -- die Grenze fuer Grossbuchstaben (ascent line)
 *  'top'           -- die obere Grenze der Zeichenbox (top line)
 *
 *  'maxWidth'      -- Die Zellenbreite des breitesten Zeichens
 *  'deltaXSpecial' -- Horizontale Verbreiterung bei Spezialeffekten
 *  'leftOff'       -- Linker Offset fuer Spezialeffekte
 *  'rightOff'      -- Rechter Offset fuer Spezialeffekte
 *)
PROCEDURE GetFaceInfo(    handle                 : DeviceHandle;
               VAR minADE, maxADE         : CARDINAL;
               VAR bottom, descent,
                   half, ascent, top      : CARDINAL;
               VAR maxWidth, deltaXSpecial,
                   leftOff, rightOff      : INTEGER);
PROCEDURE InquireFaceInfo(handle: DeviceHandle; VAR minADE: INTEGER; VAR maxADE: INTEGER; VAR dist: DistanceArrayType; VAR maxWidth: INTEGER; VAR effects: RGBArrayType);


END VDIInquires.
