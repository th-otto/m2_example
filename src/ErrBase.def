DEFINITION MODULE ErrBase;
#define REF

(*
 * Programmgesteuertes Ausloesen von Laufzeitfehlern
 *)

FROM SYSTEM IMPORT ADDRESS;

FROM SysTypes IMPORT ExcDesc, ExcDescPtr;

TYPE RtnCond = ( mayContinue,    (* Programm darf fortgefuehrt werden. *)
                 mustAbort );    (* Programm sollte beendet werden. *)

     ErrResp = ( selfCaused,     (* Fehler selbst verursacht. *)
                 callerCaused ); (* Fehler von Aufrufer verursacht. *)

(*
 * Meldet einen Laufzeitfehler.
 *
 * 'msg' darf ein Leerstring sein.
 *)
PROCEDURE RaiseError (    no    : INTEGER;       (* Fehlernummer *)
                      REF msg   : TRAP6Msg; (* Text, max. 32 Zeichen *)
                          causer: ErrResp;
                          cont  : RtnCond );

TYPE TRAP6Msg = ARRAY[0..31] OF CHAR;
PROCEDURE DoTRAP6(no: INTEGER);
CONST TRAP6_SELF = 04000H;
      TRAP6_CONT = 02000H;

(*
  TRAP Instruktionen in Assembler sind wie folgt kodiert:
    1. Word:
      Trap-Instruktion, normalerweise 'TRAP #6'
    2. Word:
      Bit 15: 0 = Ein Text, mit einem Nullbyte beendet, folgt hiernach.
      Bit 14: Fehlerverursacher, 1=diese Routine, 0=aufrufende Routine
              (funktioniert nur, wenn die Erzeugung des Link-Codes am
              Prozedurbeginn nicht unterdrueckt ist).
      Bit 13: 1 = Programm kann hiernach weiter ausgefuehrt werden.
      Bit 12: immer Eins
      Bit 11-0: Fehlernummer, Bit 11 wirkt als Vorzeichenbit und wird
              zur 16 Bit-Zahl nach Bit 12-15 kopiert.
*)

(* ======================================================================== *)
(*                    Systemfunktionen - nicht verwenden!                   *)
(* ======================================================================== *)

TYPE ErrHdlProc = PROCEDURE (     (* errNo:   *) INTEGER,
                                  (* msg:     *) REF TRAP6Msg, (* max. 32 Z.*)
                                  (* causer:  *) ErrResp,
                                  (* cont:    *) RtnCond,
                                  (* excData: *) ExcDescPtr );

(*
 * Die Routine erhaelt bei Aufruf einen Stack von 600 Bytes;
 * Das Installieren und Restaurieren dieses Vektors muss
 * vom Aufrufer durchgefuehrt werden, vor allem bei Prozessende!
 *)
VAR ErrHdl: ErrHdlProc;

VAR ExcInstalled: BOOLEAN;

PROCEDURE InstallExc; (* Erfolg ist ueber 'ExcInstalled' zu ermitteln! *)
PROCEDURE RemoveExc;

END ErrBase.
