DEFINITION MODULE GEMX;


IMPORT SYSTEM;

TYPE
  ErrorCause = (XError(*0*),
  XRaise(*1*),
  XPropagate(*2*));

(* Run time errors *)

TYPE ErrorType = (
  EM1111TRAP(*0*),
  EM1010TRAP(*1*),
  PrivilegeViolationTRAP(*2*),
  ArithOverflowTRAP(*3*),
  OutOfRangeTRAP(*4*),
  ZeroDivideTRAP(*5*),
  IllegalInstrTRAP(*6*),
  AdrErrorTRAP(*7*),
  BusErrorTRAP(*8*),
  ProgramHalt(*9*),
  NoFunctionReturn(*10*),
  CaseIndexRange(*11*),
  StackOverflow(*12*),
  OutOfRange(*13*),
  ArithOverflow(*14*),
  NewprocessWorkspace(*15*),
  ProcessTerminated(*16*),
  UnimlpementedRoutine(*17*),
  NormalReturn(*18*),
  User1(*19*),
  User2(*20*),
  User3(*21*),
  User4(*22*));

TYPE
  ErrorContextType = RECORD
                       Error(*offset: 0H*)  : INTEGER;
                       CameFrom(*offset: 2H*)  : ErrorCause;
                       PC(*offset: 4H*)  : SYSTEM.ADDRESS;
                       SR(*offset: 8H*)  : CARDINAL;
                       A5(*offset: AH*)  : SYSTEM.ADDRESS;
                       A6(*offset: EH*)  : SYSTEM.ADDRESS;
                       A7(*offset: 12H*)  : SYSTEM.ADDRESS;
                       LastMP(*offset: 16H*)  : SYSTEM.ADDRESS;
                       DumpToDo(*offset: 1AH*)  : BOOLEAN;
                       FileToDump(*offset: 1CH*)  : ARRAY [0..22] OF CHAR;;
                     END;
                   
TYPE ErrorProcessorType = PROCEDURE ();

TYPE BasePageType = RECORD
   LowTPA(*offset: 0H*)  : SYSTEM.ADDRESS;
   HiTPA(*offset: 4H*)  : SYSTEM.ADDRESS;
   CodeBase(*offset: 8H*)  : SYSTEM.ADDRESS;
   CodeLen(*offset: CH*)  : LONGCARD;
   DataBase(*offset: 10H*)  : SYSTEM.ADDRESS;
   DataLen(*offset: 14H*)  : LONGCARD;
   BssBase(*offset: 18H*)  : SYSTEM.ADDRESS;
   BssLen(*offset: 1CH*)  : LONGCARD;
   DtaPtr(*offset: 20H*)  : SYSTEM.ADDRESS;
   ParentBasePage(*offset: 24H*)  : SYSTEM.ADDRESS;
   resvd1(*offset: 28H*)  : LONGCARD;
   EnvPtr(*offset: 2CH*)  : POINTER TO ARRAY [0..79] OF CHAR;
   resvd2(*offset: 30H*)  : ARRAY [48..127] OF CHAR;
   CmdLine(*offset: 80H*)  : ARRAY [0..79] OF CHAR;
END;
               
VAR BasePageAddress (* reladdr: 0H*)  : POINTER TO BasePageType;

VAR ErrorProcessor (* reladdr: 4H*)  : ErrorProcessorType;

VAR ErrorContext (* reladdr: 8H*)  : ErrorContextType;

(* 1 *) PROCEDURE CASEX();

(* 2 *) PROCEDURE HALTX();

(* 3 *) PROCEDURE STACKTEST();

(* 4 *) PROCEDURE NEWPROCESS(PROC; SYSTEM.ADDRESS; LONGCARD; VAR SYSTEM.PROCESS; LONGCARD);

(* 5 *) PROCEDURE TRANSFER();

(* 6 *) PROCEDURE IOTRANSFER();

(* 7 *) PROCEDURE SYSCALL();

(* 8 *) PROCEDURE MULU32(LONGCARD; LONGCARD);

(* 9 *) PROCEDURE DIVU32(LONGCARD; LONGCARD);

(* 10 *) PROCEDURE MULS32(LONGINT; LONGINT);

(* 11 *) PROCEDURE DIVS32(LONGINT; LONGINT);

(* 12 *) PROCEDURE FADD(REAL; REAL);

(* 13 *) PROCEDURE FSUB(REAL; REAL);

(* 14 *) PROCEDURE FMUL(REAL; REAL);

(* 15 *) PROCEDURE FDIV(REAL; REAL);

(* 16 *) PROCEDURE FCMP(REAL; REAL);

(* 17 *) PROCEDURE FTST(REAL);

(* 18 *) PROCEDURE FLOATX(SYSTEM.LONGWORD);

(* 19 *) PROCEDURE TRUNCX(REAL);

(* 20 *) PROCEDURE LFADD(LONGREAL; LONGREAL);

(* 21 *) PROCEDURE LFSUB(LONGREAL; LONGREAL);

(* 22 *) PROCEDURE LFMUL(LONGREAL; LONGREAL);

(* 23 *) PROCEDURE LFDIV(LONGREAL; LONGREAL);

(* 24 *) PROCEDURE LFCMP(LONGREAL; LONGREAL);

(* 25 *) PROCEDURE LFTST(LONGREAL);

(* 26 *) PROCEDURE LFLOATX(SYSTEM.LONGWORD);

(* 27 *) PROCEDURE LTRUNCX(LONGREAL);

(* 28 *) PROCEDURE LENGTHEN(REAL);

(* 29 *) PROCEDURE SHORTEN(LONGREAL);

END GEMX.
