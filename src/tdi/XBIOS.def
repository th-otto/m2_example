DEFINITION MODULE XBIOS;

FROM SYSTEMIMPORT BYTE, ADDRESS;

TYPE
  MouseType = (DisableMouse(*0*),
  RelativeMouse(*1*),
  AbsoluteMouse(*2*),
  UnusedMouse(*3*),
  KeycodeMouse(*4*));

TYPE ParamBlk = RECORD
   topMode(*offset: 0H*)  : (OriginBottom, OriginTop);
   buttons(*offset: 1H*)  : BYTE;
   xParam(*offset: 2H*)  : BYTE;
   yParam(*offset: 3H*)  : BYTE;
   xMax(*offset: 4H*)  : CARDINAL;
   yMax(*offset: 6H*)  : CARDINAL;
   xinitial(*offset: 8H*)  : CARDINAL;
   yInitial(*offset: AH*)  : CARDINAL;
END;
           
TYPE Palette = ARRAY [0..15] OF CARDINAL;

TYPE FlowFlavor = (NONE, XONXOFF, RTSCTS, XONXOFFRTSCTS);

TYPE SerialDevice = (RS232, Keyboard, MIDI);

TYPE SerialSpeed = (
  BPS19200(*0*),
  BPS9600(*1*),
  BPS4800(*2*),
  BPS3600(*3*),
  BPS2400(*4*),
  BPS2000(*5*),
  BPS1800(*6*),
  BPS1200(*7*),
  BPS600(*8*),
  BPS300(*9*),
  BPS200(*10*),
  BPS150(*11*),
  BPS134(*12*),
  BPS110(*13*),
  BPS75(*14*),
  BPS50(*15*));

TYPE IORECPTR = POINTER TO IOREC;

TYPE IOREC = RECORD
    ibuf(*offset: 0H*)  : ADDRESS;
    ibufsize(*offset: 4H*)  : CARDINAL;
    ibufhd(*offset: 6H*)  : CARDINAL;
    ibuftl(*offset: 8H*)  : CARDINAL;
    ibuflow(*offset: AH*)  : CARDINAL;
    ibufhi(*offset: CH*)  : CARDINAL;
END;
        
TYPE PrtConfig = (
  DaisyWheel(*0*),
  Monochrome(*1*),
  EpsonPrinter(*2*),
  Final(*3*),
  RS232Port(*4*),
  SingleSheet(*5*),
  PC6(*6*),
  PC7(*7*),
  PC8(*8*),
  PC9(*9*),
  PC10(*10*),
  PC11(*11*),
  PC12(*12*),
  PC13(*13*),
  PC14(*14*),
  PC15(*15*));

TYPE PrtConfigSet = SET OF PrtConfig;

CONST NoAlter = PrtConfigSet(0FFFFH);

TYPE KeyTransPtr = POINTER TO KeyTrans;

TYPE KeyTrans = ARRAY [0..127] OF BYTE;

TYPE KeyTablePtr = POINTER TO KeyTable;

TYPE KeyTable = RECORD
   unshift(*offset: 0H*)  : KeyTransPtr;
   shift(*offset: 4H*)  : KeyTransPtr;
   capslock(*offset: 8H*)  : KeyTransPtr;
END;
           
CONST Low = 0;
CONST Medium = 1;
CONST High = 2;

CONST VirginMedia = 0E5E5H;

TYPE Timer = (TimerA, TimerB, TimerC, TimerD);

TYPE KBVectorPtr = POINTER TO KBVector;

TYPE KBVector = RECORD
   midi(*offset: 0H*)  : ADDRESS;
   kbderr(*offset: 4H*)  : ADDRESS;
   midierr(*offset: 8H*)  : ADDRESS;
   statvec(*offset: CH*)  : ADDRESS;
   mousevec(*offset: 10H*)  : ADDRESS;
   clockvec(*offset: 14H*)  : ADDRESS;
   joyvec(*offset: 18H*)  : ADDRESS;
END;
           
(* 1 *) PROCEDURE InitMouse(MouseType; VAR ParamBlk; PROC);

(* 2 *) PROCEDURE ScreenPhysicalBase() : ADDRESS;

(* 3 *) PROCEDURE ScreenLogicalBase() : ADDRESS;

(* 4 *) PROCEDURE GetResolution() : INTEGER;

(* 5 *) PROCEDURE SetScreenBase(ADDRESS; ADDRESS; INTEGER);

(* 6 *) PROCEDURE SetPalette(VAR Palette);

(* 7 *) PROCEDURE SetColour(CARDINAL; CARDINAL) : CARDINAL;

(* 8 *) PROCEDURE FloppyRead(ADDRESS; CARDINAL; CARDINAL; CARDINAL; CARDINAL; CARDINAL) : INTEGER;

(* 9 *) PROCEDURE FloppyWrite(ADDRESS; CARDINAL; CARDINAL; CARDINAL; CARDINAL; CARDINAL) : INTEGER;

(* 10 *) PROCEDURE FloppyFormat(ADDRESS; CARDINAL; CARDINAL; CARDINAL; CARDINAL; CARDINAL; CARDINAL) : INTEGER;

(* 11 *) PROCEDURE MIDIWS(VAR ARRAY BYTE; CARDINAL);

(* 12 *) PROCEDURE MFPint(CARDINAL; PROC);

(* 13 *) PROCEDURE IORec(SerialDevice) : IORECPTR;

(* 14 *) PROCEDURE ConfigureRS232(SerialSpeed; FlowFlavor; INTEGER; INTEGER; INTEGER; INTEGER);

(* 15 *) PROCEDURE SetKeyTable(VAR KeyTransPtr; VAR KeyTransPtr; VAR KeyTransPtr) : KeyTablePtr;

(* 16 *) PROCEDURE Random() : LONGCARD;

(* 17 *) PROCEDURE PrototypeBootSector(ADDRESS; LONGINT; INTEGER; INTEGER);

(* 18 *) PROCEDURE FloppyVerify(ADDRESS; CARDINAL; CARDINAL; CARDINAL; CARDINAL; CARDINAL) : INTEGER;

(* 19 *) PROCEDURE ScreenDump();

(* 20 *) PROCEDURE ConfigureCursor(INTEGER; INTEGER) : INTEGER;

(* 21 *) PROCEDURE SetDateTime(LONGCARD);

(* 22 *) PROCEDURE GetDateTime() : LONGCARD;

(* 23 *) PROCEDURE BiosKeys();

(* 24 *) PROCEDURE KeyboardWS(VAR ARRAY BYTE; CARDINAL);

(* 25 *) PROCEDURE DisableInterrupt(CARDINAL);

(* 26 *) PROCEDURE EnableInterrupt(CARDINAL);

(* 27 *) PROCEDURE GIRead(CARDINAL) : CARDINAL;

(* 28 *) PROCEDURE GIWrite(CARDINAL; CARDINAL);

(* 29 *) PROCEDURE GIOffBit(CARDINAL);

(* 30 *) PROCEDURE GIOnBit(CARDINAL);

(* 31 *) PROCEDURE SetTimerInterrupt(Timer; CARDINAL; CARDINAL; PROC);

(* 32 *) PROCEDURE DoSound(ADDRESS);

(* 33 *) PROCEDURE ConfigurePrinter(PrtConfigSet) : PrtConfigSet;

(* 34 *) PROCEDURE KeyboardVectors() : KBVectorPtr;

(* 35 *) PROCEDURE KeyboardRate(INTEGER; INTEGER) : CARDINAL;

(* 36 *) PROCEDURE VSync();

(* 37 *) PROCEDURE SuperExec(PROC);

(* 38 *) PROCEDURE PuntAES();

END XBIOS.
