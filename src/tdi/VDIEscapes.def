DEFINITION MODULE VDIEscapes;

FROM GEMVDIbase IMPORT PxyArrayType, FilmNameType, FilmIndexType;

(* 1 *) PROCEDURE InquireCharCells(INTEGER; VAR INTEGER; VAR INTEGER);

(* 2 *) PROCEDURE ExitAlphaMode(INTEGER);

(* 3 *) PROCEDURE EnterAlphaMode(INTEGER);

(* 4 *) PROCEDURE CursorUp(INTEGER);

(* 5 *) PROCEDURE CursorDown(INTEGER);

(* 6 *) PROCEDURE CursorRight(INTEGER);

(* 7 *) PROCEDURE CursorLeft(INTEGER);

(* 8 *) PROCEDURE CursorHome(INTEGER);

(* 9 *) PROCEDURE EraseToEOS(INTEGER);

(* 10 *) PROCEDURE EraseToEOL(INTEGER);

(* 11 *) PROCEDURE CursorAddress(INTEGER; INTEGER; INTEGER);

(* 12 *) PROCEDURE OutputText(INTEGER; VAR ARRAY CHAR);

(* 13 *) PROCEDURE ReverseVideoOn(INTEGER);

(* 14 *) PROCEDURE ReverseVideoOff(INTEGER);

(* 15 *) PROCEDURE InquireCursorAddress(INTEGER; VAR INTEGER; VAR INTEGER);

(* 16 *) PROCEDURE InquireTabletStatus(INTEGER) : INTEGER;

(* 17 *) PROCEDURE HardCopy(INTEGER);

(* 18 *) PROCEDURE DisplayCursor(INTEGER; INTEGER; INTEGER);

(* 19 *) PROCEDURE RemoveCursor(INTEGER);

(* 20 *) PROCEDURE FormAdvance(INTEGER);

(* 21 *) PROCEDURE OutputWindow(INTEGER; PxyArrayType);

(* 22 *) PROCEDURE ClearDisplayList(INTEGER);

(* 23 *) PROCEDURE OutputBitImageFile(
      handle:INTEGER;
      VAR fname: ARRAY OF CHAR;
      aspect: INTEGER;
      scaling: INTEGER;
      numPts: INTEGER;
      VAR frame: PxyArrayType);

(* 24 *) PROCEDURE SelectPalette(INTEGER; INTEGER) : INTEGER;

(* 25 *) PROCEDURE InquirePaletteFilms(INTEGER; VAR FilmNameType);

(* 26 *) PROCEDURE InquirePaletteState(INTEGER; VAR port: INTEGER; VAR film: INTEGER; VAR lightness: INTEGER; VAR interlace: INTEGER; VAR planes: INTEGER; VAR FilmIndexType);

(* 27 *) PROCEDURE SetPaletteState(handle: INTEGER; port: INTEGER; film: INTEGER; lightnes: INTEGER; interlace: INTEGER; planes: INTEGER; VAR FilmIndexType);

(* 28 *) PROCEDURE SavePaletteState(INTEGER);

(* 29 *) PROCEDURE SuppressPaletteMessages(INTEGER);

(* 30 *) PROCEDURE PaletteErrorInquire(INTEGER) : INTEGER;

(* 31 *) PROCEDURE UpdateMetafileExtents(INTEGER; INTEGER; INTEGER; INTEGER; INTEGER);

(* 32 *) PROCEDURE WriteMetafile(INTEGER; INTEGER; VAR ARRAY INTEGER; INTEGER; VAR ARRAY INTEGER);

(* 33 *) PROCEDURE ChangeFileName(INTEGER; VAR ARRAY CHAR);

END VDIEscapes.
