DEFINITION MODULE SysTypes;

(* Einige nuetzliche Types und die Exception-Vektor-Konstanten incl. FPU *)

FROM SYSTEM IMPORT BYTE, INTEGER16, INTEGER32, CARDINAL16, CARDINAL32, ADDRESS;

TYPE    CHARSET = SET OF CHAR;

        PtrBYTE = POINTER TO BYTE;

        BBS = SET OF [0..7]; (* Byte BitSet *)

        PtrBBS = POINTER TO BBS; (* Fuer Zugriff auf Peripheriebausteine *)

        PtrOSHeader = POINTER TO OSHeader;

        OSHeader = RECORD
                     entry: CARDINAL16;   (* BRA to reset handler *)
                     version: CARDINAL16; (* TOS version number *)
                     reseth: ADDRESS;   (* reset handler *)
                     beg: ADDRESS;      (* base of OS *)
                     end: ADDRESS;      (* end BIOS/GEMDOS/VDI ram usage *)
                     rsv1: INTEGER32;    (* unused, reserved *)
                     magic: ADDRESS;    (* GEM memory usage parm. block *)
                     date: CARDINAL32;    (* Date of system build (YYYYMMDD) *)
                     conf: CARDINAL16;    (* OS configuration bits *)
                     dosdate: CARDINAL16; (* DOS-format date of system build *)
                   (* Die folgenden Felder sind erst seit TOS 1.2 vorhanden: *)
                     root: ADDRESS;     (* base of OS pool *)
                     kbshift: ADDRESS;  (* keyboard shift state variable *)
                     run: ADDRESS;      (* GEMDOS PID of current process *)
                   END;


(* f. Modul SysCtrl: *)

        ScanDesc = RECORD
                     pc, link, stack: ADDRESS
                   END;

(* f. Modul Excepts: *)

CONST   (* Alle relevanten Exception-Vektornummern des ST *)
        BusError   = 2;
        AddrError  = 3;
        IllInstr   = 4;
        ZeroDivide = 5;     (* Used by Modula System, trapped by 'ErrBase' *)
        CHKExc     = 6;     (* Used by Modula System, trapped by 'ErrBase' *)
        TRAPVExc   = 7;     (* Used by Modula System, trapped by 'ErrBase' *)
        PrivViol   = 8;
        Trace      = 9;
        Emul1010   = 10;    (* Used by GEM *)
        Emul1111   = 11;    (* Used by GEM *)
        ProtViol   = 13;    (* Coprocessor exception *)
        FormatErr  = 14;
        UninitializedIR = 15;
        SpuriousIR = 24;
        IRLevel1 = 25;
        IRLevel2 = 26;      (* Used by TOS *)
        IRLevel3 = 27;
        IRLevel4 = 28;      (* Used by TOS *)
        IRLevel5 = 29;
        IRLevel6 = 30;      (* Used by TOS *)
        IRLevel7 = 31;
        TRAP0  = 32;
        TRAP1  = 33;        (* Used by TOS *)
        TRAP2  = 34;
        TRAP3  = 35;
        TRAP4  = 36;        (* Used by 'SysCtrl' to get into Supervisor mode *)
        TRAP5  = 37;        (* Used by Modula System, Module 'Debug' *)
        TRAP6  = 38;        (* Used by Modula System, trapped by 'ErrBase' *)
        TRAP7  = 39;
        TRAP8  = 40;
        TRAP9  = 41;
        TRAP10 = 42;
        TRAP11 = 43;
        TRAP12 = 44;
        TRAP13 = 45;        (* Used by TOS *)
        TRAP14 = 46;        (* Used by TOS *)
        TRAP15 = 47;

(* FPU exceptions *)
        BSUnExc      = 48;
        InexactRes   = 49;
        FPZeroDivide = 50;
        FPUnderflow  = 51;
        OpError      = 52;
        FPOverflow   = 53;
        NANExc       = 54;

(* 'Soft'-Interrupts, must be terminated by RTS instead of RTE *)
        EtvTimer = 256;     (* Used by TOS *)
        EtvCritic = 257;
        EtvTerm = 258;      (* Caught already by 'PrgCtrl.CatchProcessTerm' *)
        Etv103 = 259;       (* unused, reserved by Atari for future use *)
        Etv104 = 260;       (* unused, reserved by Atari for future use *)
        Etv105 = 261;       (* unused, reserved by Atari for future use *)
        Etv106 = 262;       (* unused, reserved by Atari for future use *)
        Etv107 = 263;       (* unused, reserved by Atari for future use *)

TYPE    Exceptions = [2..263];

        ExcSet = SET OF Exceptions;

        ExcDescPtr = POINTER TO ExcDesc;
        ExcDesc = RECORD (* enthaelt alle wichtigen Daten einer Exception *)
                    regD0 : CARDINAL32;
                    regD1 : CARDINAL32;
                    regD2 : CARDINAL32;
                    regD3 : CARDINAL32;
                    regD4 : CARDINAL32;
                    regD5 : CARDINAL32;
                    regD6 : CARDINAL32;
                    regD7 : CARDINAL32;
                    regA0 : CARDINAL32;
                    regA1 : CARDINAL32;
                    regA2 : CARDINAL32;
                    regA3 : CARDINAL32;
                    regA4 : CARDINAL32;
                    regA5 : CARDINAL32;
                    regA6 : CARDINAL32;
                    regSSP: ADDRESS;     (* SR/PC bereits abgeraeumt *)
                    regUSP: ADDRESS;
                    regPC : POINTER TO CARDINAL16;
                    regSR : CARDINAL16;
                    CASE excNo: Exceptions OF
                      BusError, AddrError:   (* zusaetzlich bei Bus/Adr-Error:*)
                       accessAddr : ADDRESS; (* Zugriffsadresse *)
                       superSR    : CARDINAL16;    (* Super-Status-Word *)
                       instruction: CARDINAL16 |  (* Fehler erzeugende Anweisung *)
                    ELSE
                    END
                  END;

END SysTypes.
