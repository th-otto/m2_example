DEFINITION MODULE SysVars;

(* Autor: Dirk Steins.                             Stand: 5.12.90  *)

(* Liste der Systemvariablen                                       *)
(* Bezeichnungen nach                                              *)
(*      Atari ST Profi Buch                                        *)
(*      Jankowski, Rabich, Reschke                                 *)
(*      Sybex-Verlag                                               *)

(* Mehr Informationen zu den Variablen gibt es ebenfalls im oben   *)
(* genanntem Werk.                                                 *)

(* Der Zugriff auf diese Variablen ist Supervisor-Modus, z.B.      *)
(* mittels der Super..-Funktionen aus dem Modul SysUtil1 moeglich.  *)



CONST

    etv_timer   =   0400H     ; (* Interrupt-Vektor des System-Timers *)
    etv_critic  =   0404H     ; (* Vektor fuer den Critical-Error-Handler *)
    etv_term    =   0408H     ; (* Interrupt-Vektor fuer Prozessbeendigungen *)
    etv_xtra    =   040CH     ; (* 5 reservierte Vektoren *)
    memvalid    =   0420H     ; (* = $752019f3 heisst, Speicherkonfiguration *)
                               (* ist gueltig (nach RESET)                  *)
                               (* siehe auch memval2, memval3 und memcntrl *)
    memcntrl    =   0424H     ; (* Unteres Nibble des Schattenregisters des *)
                               (* Speicherkontroll-Registers ($ff8001)     *)
    resvalid    =   0426H     ; (* = $31415926 => bei RESET ueber resvector  *)
                               (*                springen                  *)
    resvector   =   042AH     ; (* siehe resvalid                           *)
    phystop     =   042EH     ; (* Zeigt auf 1. Byte ueber phys. Ende des RAM *)
    _membot     =   0432H     ; (* Anfang des unter GEMDOS freien Speichers  *)
    _memtop     =   0436H     ; (* Ende   des unter GEMDOS freien Speichers  *)
    memval2     =   043AH     ; (* = $237698aa , gilt in Verbindung mit memval *)
    flock       =   043EH     ; (* fuer Sperren des DMA-Zugriffs             *)
    seekrate    =   0440H     ; (* Default-Werte fuer die Floppy-Steprate    *)
    _timer_ms   =   0442H     ; (* Zeit in ms, die zwischen zwei System-Timer *)
                               (* Interrupts liegt, normalerweise 20 ms    *)
    _fverify    =   0444H     ; (* <> 0 : Verify nach Floppy-Schreiben *)
    _bootdev    =   0446H     ; (* legt das Boot-Laufwerk nach dem naechstem *)
                               (* RESET fest                               *)
    palmode     =   0448H     ; (* fuer Fernsehnorm: 0=60Hz, 1=50Hz (PAL)    *)
    defshiftmd  =   044AH     ; (* Default Farb-Aufloesung: 0=320*200,1=640*200*)
    sshiftmd    =   044CH     ; (* Shadow des Shifter-Modus-Registers       *)
    _v_bas_ad   =   044EH     ; (* Zeiger auf den Anfang des Bildspeichers  *)
    vblsem      =   0452H     ; (* 1= VBL-Handler aktiviert                 *)
    nvbls       =   0454H     ; (* Anzahl der Eintraege in _vblqueue         *)
    _vblqueue   =   0456H     ; (* Zeiger auf Tabelle mit Adressen der VBL- *)
                               (* Routinen. 1. Vektor immer Mausbewegung!! *)
    colorptr    =   045AH     ; (* Zeiger auf Farbpalette nach naechstem VBL *)
                               (* (kann auch 0 sein, dann passiert nichts) *)
    screenpt    =   045EH     ; (* Zeiger auf Start des Bildschirms nach    *)
                               (* naechstem VBlank. (kann auch 0 sein)      *)
    _vbclock    =   0462H     ; (* Anzahl der bereits erfolgten VBlanks     *)
    _frclock    =   0466H     ; (* wie _vbclock, wird nur nicht durch vblsem *)
                               (* gestoppt                                 *)
    hdv_init    =   046AH     ; (* Vektor fuer Init der logischen Drives     *)
    swv_vec     =   046EH     ; (* Vektor auf Routine bei Wechsel           *)
                               (* Mono <-> Color, normalerweise auf RESET  *)
    hdv_bpb     =   0472H     ; (* Vektor fuer GetBPB auf logischen Drives   *)
    hdv_rw      =   0476H     ; (* Vektor fuer Lesen/Schreiben auf log. Drives *)
    hdv_boot    =   047AH     ; (* Vek. fuer Lesen des Bootsectors auf log. "  *)
    hdv_mediach =   047EH     ; (* Vek. fuer Wechselstatus auf log. Drive    *)
    _cmdload    =   0482H     ; (* <>0 : Lade COMMAND.COM statt GEM nach Boot *)
    conterm     =   0484H     ; (* Attributbits fuer CON:                    *)
    trp14ret    =   0486H     ; (* Interne Ruecksprungadresse bei TRAP #14   *)
    criticret   =   048AH     ; (* Interne Ruecksprungadresse                *)
    themd       =   048EH     ; (* MD-Struktur des GEMDOS. Nicht aendern!!!  *)
    _____md     =   049EH     ; (* Platz fuer weiteren MD                    *)
    savptr      =   04A2H     ; (* Zeiger auf BIOS Register-Zwischenspeicher *)
    _nflops     =   04A6H     ; (* Anzahl der angemeldeten Disk-Drives      *)
    con_state   =   04A8H     ; (* Interner zeiger fuer Bildschirmausgaben   *)
    sav_row     =   04ACH     ; (* Speicher fuer Cursor-Position         *)
    sav_context =   04AEH     ; (* Zeiger  auf Speicherbereich fuer Register *)
                               (* und Stackteile bei Exceptions (norm. $380) *)
    _bufl       =   04B2H     ; (* Zwei Zeiger auf Buffer-Control-Blocks(BCB) *)
    _hz_200     =   04BAH     ; (* Bisherige Anzahl der 200Hz-Interrupts    *)
    the_env     =   04BEH     ; (* Standard Environment Zeiger (unbenutzt)  *)
    _drvbits    =   04C2H     ; (* Bit-Vektor der angemeldeten Drives *)
    _dskbufp    =   04C6H     ; (* Zeiger auf 1k Buffer fuer Disk-I/O  *)
    _autopath   =   04CAH     ; (* Zeiger auf Zugriffspfad fuer AUTO-Ordner   *)
    _vbl_list   =   04CEH     ; (* Urspruengliche Liste der VBL-Routinen      *)
    _dumpflg    =   04EEH     ; (* Zaehler fuer ALT-HELP-Tastendruecke   *)
    _prtabt     =   04F0H     ; (* Flag fuer Abbruch des Druckvorgangs *)
    _sysbase    =   04F2H     ; (* Zeiger auf Anfangsadresse des TOS-Headers *)
    _shell_p    =   04F6H     ; (* Zeiger auf Kommandoeingabe-Routine einer  *)
                               (* Command-Shell. Im ROM nicht benutzt       *)
    end_os      =   04FAH     ; (* Zeiger auf 1. nicht vom TOS benutztes Byte*)
    exec_os     =   04FEH     ; (* Zeiger auf Shell-Programm nach Init von   *)
                               (* GEMDOS. Normalerweise AES und Desktop     *)
    scr_dump    =   0502H     ; (* Zeiger auf Hardcopy-Routine               *)
    
    (* Die folgenden Variablen sind erst ab TOS 1.2 (Blitter-TOS) vorhanden *)
    
    prv_lsto    =   0506H     ; (* Zeiger auf Routine fuer Status der Drucker-*)
                               (* Schnittstelle. Ebenfalls fuer Hardcopy     *)
    prv_lst     =   050AH     ; (* Zeiger auf Routine fuer Ausgabe auf Drucker-*)
                               (* Schnittstelle. Ebenfalls fuer Hardcopy     *)
    prv_auxo    =   050EH     ; (* Zeiger auf Routine fuer Status der RS232-  *)
                               (* Schnittstelle. Ebenfalls fuer Hardcopy     *)
    prv_aux     =   0512H     ; (* Zeiger auf Routine fuer Ausgabe auf RS232- *)
                               (* Schnittstelle. Ebenfalls fuer Hardcopy     *)
    pun_ptr     =   0516H     ; (* Zeiger auf HDINFO-Struktur                *)
    memval3     =   051AH     ; (* Siehe memval und memval2. Magic=$5555aaaa *)
    _longframe  =   059EH     ; (* Stackoffset bei Exceptions                *)
    
    (* Die folgenden Variablen sind erst ab TOS 1.6 (STE, TT) vorhanden *)

    _p_cookies  =   05A0H     ; (* Zeiger auf CookieJar - ggf. Null          *)
    bell_hook   =   05ACH     ; (* Adresse fuer 'Glocken'-Ton. Zeigt auf nor- *)
                               (* male Prozedur, die mit RTS enden muss.     *)
                               (* Kann Original-Routine aufrufen            *)
    kcl_hook    =   05B0H     ; (* Adresse fuer 'Key-Click'-Ton.              *)

    fmemtop     =   05A4H     ; (* Memtop fuer Fast-RAM (TT-only!)            *)
    fmemvalid   =   05A8H     ; (* Memvalid fuer Fast-RAM. Magic nicht bekannt*)

END SysVars.
