DEFINITION MODULE BIOS;

FROM SYSTEM IMPORT ADDRESS;

TYPE MDPtr = POINTER TO MD;

TYPE MD = RECORD
  mlink  : MDPtr;
  mstart : ADDRESS;
  mlength: LONGCARD;
  mown   : ADDRESS;
END;
     
TYPE MPB = RECORD
  mpmfl  : MDPtr;
  mpmal  : MDPtr;
  morover: MDPtr;
END;
      
TYPE Device = (PRT, AUX, CON, HSS, KDB, RAW);

TYPE RW = (Read, Write, ReadNoMediaChange, WriteNoMediaChange);

TYPE MCState = (NoChange, MayHaveChanged, Changed);

TYPE BPBPtr = POINTER TO BPB;

TYPE BPB = RECORD
  recsiz : CARDINAL;
  clsiz  : CARDINAL;
  clsizb : CARDINAL;
  rdlen  : CARDINAL;
  fsiz   : CARDINAL;
  fatrec : CARDINAL;
  datrec : CARDINAL;
  numcl  : CARDINAL;
  bflags : CARDINAL;
END;
      
TYPE DriveSet = SET OF [0..31];

TYPE KBShiftBits = (RightShift, LeftShift, ControlKey, AlternateKey, CapsLock, RightMouseButton, LeftMMouseButton);

TYPE KBShifts = SET OF KBShiftBits;

(* 1 *) PROCEDURE GetMPB(VAR mpb: MPB);

(* 2 *) PROCEDURE BConStat(dev: Device): BOOLEAN;

(* 3 *) PROCEDURE BCosStat(dev: Device): BOOLEAN;

(* 4 *) PROCEDURE BConIn(dev: Device): LONGCARD;

(* 5 *) PROCEDURE BConOut(dev: Device; ch: CHAR);

(* 6 *) PROCEDURE RWAbs(mode: RW; buffer: ADDRESS; count: CARDINAL; recno: CARDINAL; dev: CARDINAL): LONGINT;

(* 7 *) PROCEDURE SetException(excno: CARDINAL; p: PROC);

(* 8 *) PROCEDURE GetException(excno: CARDINAL): ADDRESS;

(* 9 *) PROCEDURE TimerCalibration(): LONGCARD;

(* 10 *) PROCEDURE GetBPB(dev: CARDINAL): BPBPtr;

(* 11 *) PROCEDURE MediaChange(dev: CARDINAL): MCState;

(* 12 *) PROCEDURE DriveMap(): DriveSet;

(* 13 *) PROCEDURE SetKBShift(keys: KBShifts);

(* 14 *) PROCEDURE GetKBShift(): KBShifts;

END BIOS.
